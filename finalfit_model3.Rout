
R version 3.6.0 (2019-04-26) -- "Planting of a Tree"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library(tidyverse)
── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ──
✔ ggplot2 3.3.2     ✔ purrr   0.3.4
✔ tibble  3.0.4     ✔ dplyr   1.0.2
✔ tidyr   1.1.2     ✔ stringr 1.4.0
✔ readr   1.4.0     ✔ forcats 0.5.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
> library(tidymodels)
── Attaching packages ────────────────────────────────────── tidymodels 0.1.1 ──
✔ broom     0.7.2      ✔ recipes   0.1.15
✔ dials     0.0.9      ✔ rsample   0.0.8 
✔ infer     0.5.3      ✔ tune      0.1.1 
✔ modeldata 0.1.0      ✔ workflows 0.2.1 
✔ parsnip   0.1.4      ✔ yardstick 0.0.7 
── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──
✖ scales::discard() masks purrr::discard()
✖ dplyr::filter()   masks stats::filter()
✖ recipes::fixed()  masks stringr::fixed()
✖ dplyr::lag()      masks stats::lag()
✖ yardstick::spec() masks readr::spec()
✖ recipes::step()   masks stats::step()
> library(doParallel)
Loading required package: foreach

Attaching package: ‘foreach’

The following objects are masked from ‘package:purrr’:

    accumulate, when

Loading required package: iterators
Loading required package: parallel
> 
> 
> # Load the data
> 
> full_train <- read_csv("data/train.csv") %>% # relative path
+   mutate(classification = factor(classification, # outcome variable classification into factor
+                                  levels = 1:4,
+                                  labels = c("far below", "below", "meets", 
+                                             "exceeds"),
+                                  ordered = TRUE))

── Column specification ────────────────────────────────────────────────────────
cols(
  .default = col_character(),
  id = col_double(),
  attnd_dist_inst_id = col_double(),
  attnd_schl_inst_id = col_double(),
  enrl_grd = col_double(),
  calc_admn_cd = col_logical(),
  partic_dist_inst_id = col_double(),
  partic_schl_inst_id = col_double(),
  score = col_double(),
  classification = col_double(),
  ncessch = col_double(),
  lat = col_double(),
  lon = col_double()
)
ℹ Use `spec()` for the full column specifications.

> 
> 
> full_train <- dplyr::slice_sample(full_train, prop = 0.2)        #comment this part out before moving to talapas.
> 
> # Spliting the data into training set and test set.
> d <- initial_split(full_train)
> d_train <- training(d)           # training set
> d_test <- testing(d)             # testing set
> cv <- vfold_cv(d_train)  # k-fold cross validation resampling
> 
> # recipe: feature engineering
> 
> rec <- recipe(classification ~ lat + lon + econ_dsvntg + tag_ed_fg + sp_ed_fg + tst_bnch +
+                 tst_dt, data = d_train) %>%
+   step_mutate(tst_dt = lubridate::mdy_hms(tst_dt)) %>%
+   update_role(tst_dt, new_role = "time_index") %>%  # alters an existing role in the recipe
+   step_rollimpute(all_numeric()) %>%  # substitute missing values of numeric variables by the measure of location e.g. median
+   update_role(tst_dt, new_role = "predictor") %>%  #?
+   step_mutate(tst_dt = as.numeric(tst_dt)) %>%   # setting date variable as numeric
+   step_medianimpute(all_numeric()) %>% #substitute missing values of numeric variables by the training set median of those variables.
+   step_novel(all_nominal(), -all_outcomes()) %>% # assign a previously unseen factor level to a new value.
+   step_unknown(all_nominal(), -all_outcomes()) %>% # assign a missing value in a factor level to 'unknown'.
+   step_dummy(all_nominal(), -all_outcomes()) %>% # convert nominal data in numeric binary model for the levels of the original data.
+   step_nzv(all_predictors()) %>% # removes highly sprarse or unbalanced variables.
+   step_normalize(all_predictors()) # normalize numeric variables to have SD of 1 and mean of 0
> 
> # parallel processing: Laptops and PCs have multi core processors with sufficient amount of memory available. Parallelizing codes using these multi core processors helps to improve code efficiency.
> 
> 
> 
> all_cores <- parallel::detectCores(logical = FALSE)
> 
> cl <- makePSOCKcluster(all_cores)
> registerDoParallel(cl)
> foreach::getDoParWorkers()
[1] 28
> clusterEvalQ(cl, {library(tidymodels)})
[[1]]
 [1] "yardstick"  "workflows"  "tune"       "tidyr"      "tibble"    
 [6] "rsample"    "recipes"    "purrr"      "parsnip"    "modeldata" 
[11] "infer"      "ggplot2"    "dplyr"      "dials"      "scales"    
[16] "broom"      "tidymodels" "stats"      "graphics"   "grDevices" 
[21] "utils"      "datasets"   "methods"    "base"      

[[2]]
 [1] "yardstick"  "workflows"  "tune"       "tidyr"      "tibble"    
 [6] "rsample"    "recipes"    "purrr"      "parsnip"    "modeldata" 
[11] "infer"      "ggplot2"    "dplyr"      "dials"      "scales"    
[16] "broom"      "tidymodels" "stats"      "graphics"   "grDevices" 
[21] "utils"      "datasets"   "methods"    "base"      

[[3]]
 [1] "yardstick"  "workflows"  "tune"       "tidyr"      "tibble"    
 [6] "rsample"    "recipes"    "purrr"      "parsnip"    "modeldata" 
[11] "infer"      "ggplot2"    "dplyr"      "dials"      "scales"    
[16] "broom"      "tidymodels" "stats"      "graphics"   "grDevices" 
[21] "utils"      "datasets"   "methods"    "base"      

[[4]]
 [1] "yardstick"  "workflows"  "tune"       "tidyr"      "tibble"    
 [6] "rsample"    "recipes"    "purrr"      "parsnip"    "modeldata" 
[11] "infer"      "ggplot2"    "dplyr"      "dials"      "scales"    
[16] "broom"      "tidymodels" "stats"      "graphics"   "grDevices" 
[21] "utils"      "datasets"   "methods"    "base"      

[[5]]
 [1] "yardstick"  "workflows"  "tune"       "tidyr"      "tibble"    
 [6] "rsample"    "recipes"    "purrr"      "parsnip"    "modeldata" 
[11] "infer"      "ggplot2"    "dplyr"      "dials"      "scales"    
[16] "broom"      "tidymodels" "stats"      "graphics"   "grDevices" 
[21] "utils"      "datasets"   "methods"    "base"      

[[6]]
 [1] "yardstick"  "workflows"  "tune"       "tidyr"      "tibble"    
 [6] "rsample"    "recipes"    "purrr"      "parsnip"    "modeldata" 
[11] "infer"      "ggplot2"    "dplyr"      "dials"      "scales"    
[16] "broom"      "tidymodels" "stats"      "graphics"   "grDevices" 
[21] "utils"      "datasets"   "methods"    "base"      

[[7]]
 [1] "yardstick"  "workflows"  "tune"       "tidyr"      "tibble"    
 [6] "rsample"    "recipes"    "purrr"      "parsnip"    "modeldata" 
[11] "infer"      "ggplot2"    "dplyr"      "dials"      "scales"    
[16] "broom"      "tidymodels" "stats"      "graphics"   "grDevices" 
[21] "utils"      "datasets"   "methods"    "base"      

[[8]]
 [1] "yardstick"  "workflows"  "tune"       "tidyr"      "tibble"    
 [6] "rsample"    "recipes"    "purrr"      "parsnip"    "modeldata" 
[11] "infer"      "ggplot2"    "dplyr"      "dials"      "scales"    
[16] "broom"      "tidymodels" "stats"      "graphics"   "grDevices" 
[21] "utils"      "datasets"   "methods"    "base"      

[[9]]
 [1] "yardstick"  "workflows"  "tune"       "tidyr"      "tibble"    
 [6] "rsample"    "recipes"    "purrr"      "parsnip"    "modeldata" 
[11] "infer"      "ggplot2"    "dplyr"      "dials"      "scales"    
[16] "broom"      "tidymodels" "stats"      "graphics"   "grDevices" 
[21] "utils"      "datasets"   "methods"    "base"      

[[10]]
 [1] "yardstick"  "workflows"  "tune"       "tidyr"      "tibble"    
 [6] "rsample"    "recipes"    "purrr"      "parsnip"    "modeldata" 
[11] "infer"      "ggplot2"    "dplyr"      "dials"      "scales"    
[16] "broom"      "tidymodels" "stats"      "graphics"   "grDevices" 
[21] "utils"      "datasets"   "methods"    "base"      

[[11]]
 [1] "yardstick"  "workflows"  "tune"       "tidyr"      "tibble"    
 [6] "rsample"    "recipes"    "purrr"      "parsnip"    "modeldata" 
[11] "infer"      "ggplot2"    "dplyr"      "dials"      "scales"    
[16] "broom"      "tidymodels" "stats"      "graphics"   "grDevices" 
[21] "utils"      "datasets"   "methods"    "base"      

[[12]]
 [1] "yardstick"  "workflows"  "tune"       "tidyr"      "tibble"    
 [6] "rsample"    "recipes"    "purrr"      "parsnip"    "modeldata" 
[11] "infer"      "ggplot2"    "dplyr"      "dials"      "scales"    
[16] "broom"      "tidymodels" "stats"      "graphics"   "grDevices" 
[21] "utils"      "datasets"   "methods"    "base"      

[[13]]
 [1] "yardstick"  "workflows"  "tune"       "tidyr"      "tibble"    
 [6] "rsample"    "recipes"    "purrr"      "parsnip"    "modeldata" 
[11] "infer"      "ggplot2"    "dplyr"      "dials"      "scales"    
[16] "broom"      "tidymodels" "stats"      "graphics"   "grDevices" 
[21] "utils"      "datasets"   "methods"    "base"      

[[14]]
 [1] "yardstick"  "workflows"  "tune"       "tidyr"      "tibble"    
 [6] "rsample"    "recipes"    "purrr"      "parsnip"    "modeldata" 
[11] "infer"      "ggplot2"    "dplyr"      "dials"      "scales"    
[16] "broom"      "tidymodels" "stats"      "graphics"   "grDevices" 
[21] "utils"      "datasets"   "methods"    "base"      

[[15]]
 [1] "yardstick"  "workflows"  "tune"       "tidyr"      "tibble"    
 [6] "rsample"    "recipes"    "purrr"      "parsnip"    "modeldata" 
[11] "infer"      "ggplot2"    "dplyr"      "dials"      "scales"    
[16] "broom"      "tidymodels" "stats"      "graphics"   "grDevices" 
[21] "utils"      "datasets"   "methods"    "base"      

[[16]]
 [1] "yardstick"  "workflows"  "tune"       "tidyr"      "tibble"    
 [6] "rsample"    "recipes"    "purrr"      "parsnip"    "modeldata" 
[11] "infer"      "ggplot2"    "dplyr"      "dials"      "scales"    
[16] "broom"      "tidymodels" "stats"      "graphics"   "grDevices" 
[21] "utils"      "datasets"   "methods"    "base"      

[[17]]
 [1] "yardstick"  "workflows"  "tune"       "tidyr"      "tibble"    
 [6] "rsample"    "recipes"    "purrr"      "parsnip"    "modeldata" 
[11] "infer"      "ggplot2"    "dplyr"      "dials"      "scales"    
[16] "broom"      "tidymodels" "stats"      "graphics"   "grDevices" 
[21] "utils"      "datasets"   "methods"    "base"      

[[18]]
 [1] "yardstick"  "workflows"  "tune"       "tidyr"      "tibble"    
 [6] "rsample"    "recipes"    "purrr"      "parsnip"    "modeldata" 
[11] "infer"      "ggplot2"    "dplyr"      "dials"      "scales"    
[16] "broom"      "tidymodels" "stats"      "graphics"   "grDevices" 
[21] "utils"      "datasets"   "methods"    "base"      

[[19]]
 [1] "yardstick"  "workflows"  "tune"       "tidyr"      "tibble"    
 [6] "rsample"    "recipes"    "purrr"      "parsnip"    "modeldata" 
[11] "infer"      "ggplot2"    "dplyr"      "dials"      "scales"    
[16] "broom"      "tidymodels" "stats"      "graphics"   "grDevices" 
[21] "utils"      "datasets"   "methods"    "base"      

[[20]]
 [1] "yardstick"  "workflows"  "tune"       "tidyr"      "tibble"    
 [6] "rsample"    "recipes"    "purrr"      "parsnip"    "modeldata" 
[11] "infer"      "ggplot2"    "dplyr"      "dials"      "scales"    
[16] "broom"      "tidymodels" "stats"      "graphics"   "grDevices" 
[21] "utils"      "datasets"   "methods"    "base"      

[[21]]
 [1] "yardstick"  "workflows"  "tune"       "tidyr"      "tibble"    
 [6] "rsample"    "recipes"    "purrr"      "parsnip"    "modeldata" 
[11] "infer"      "ggplot2"    "dplyr"      "dials"      "scales"    
[16] "broom"      "tidymodels" "stats"      "graphics"   "grDevices" 
[21] "utils"      "datasets"   "methods"    "base"      

[[22]]
 [1] "yardstick"  "workflows"  "tune"       "tidyr"      "tibble"    
 [6] "rsample"    "recipes"    "purrr"      "parsnip"    "modeldata" 
[11] "infer"      "ggplot2"    "dplyr"      "dials"      "scales"    
[16] "broom"      "tidymodels" "stats"      "graphics"   "grDevices" 
[21] "utils"      "datasets"   "methods"    "base"      

[[23]]
 [1] "yardstick"  "workflows"  "tune"       "tidyr"      "tibble"    
 [6] "rsample"    "recipes"    "purrr"      "parsnip"    "modeldata" 
[11] "infer"      "ggplot2"    "dplyr"      "dials"      "scales"    
[16] "broom"      "tidymodels" "stats"      "graphics"   "grDevices" 
[21] "utils"      "datasets"   "methods"    "base"      

[[24]]
 [1] "yardstick"  "workflows"  "tune"       "tidyr"      "tibble"    
 [6] "rsample"    "recipes"    "purrr"      "parsnip"    "modeldata" 
[11] "infer"      "ggplot2"    "dplyr"      "dials"      "scales"    
[16] "broom"      "tidymodels" "stats"      "graphics"   "grDevices" 
[21] "utils"      "datasets"   "methods"    "base"      

[[25]]
 [1] "yardstick"  "workflows"  "tune"       "tidyr"      "tibble"    
 [6] "rsample"    "recipes"    "purrr"      "parsnip"    "modeldata" 
[11] "infer"      "ggplot2"    "dplyr"      "dials"      "scales"    
[16] "broom"      "tidymodels" "stats"      "graphics"   "grDevices" 
[21] "utils"      "datasets"   "methods"    "base"      

[[26]]
 [1] "yardstick"  "workflows"  "tune"       "tidyr"      "tibble"    
 [6] "rsample"    "recipes"    "purrr"      "parsnip"    "modeldata" 
[11] "infer"      "ggplot2"    "dplyr"      "dials"      "scales"    
[16] "broom"      "tidymodels" "stats"      "graphics"   "grDevices" 
[21] "utils"      "datasets"   "methods"    "base"      

[[27]]
 [1] "yardstick"  "workflows"  "tune"       "tidyr"      "tibble"    
 [6] "rsample"    "recipes"    "purrr"      "parsnip"    "modeldata" 
[11] "infer"      "ggplot2"    "dplyr"      "dials"      "scales"    
[16] "broom"      "tidymodels" "stats"      "graphics"   "grDevices" 
[21] "utils"      "datasets"   "methods"    "base"      

[[28]]
 [1] "yardstick"  "workflows"  "tune"       "tidyr"      "tibble"    
 [6] "rsample"    "recipes"    "purrr"      "parsnip"    "modeldata" 
[11] "infer"      "ggplot2"    "dplyr"      "dials"      "scales"    
[16] "broom"      "tidymodels" "stats"      "graphics"   "grDevices" 
[21] "utils"      "datasets"   "methods"    "base"      

> 
> # Final fit
> 
> tuned <- readRDS("models/tuning.Rds")
> 
> mod <- nearest_neighbor() %>%
+   set_mode("classification") %>%
+   set_engine("kknn")
> 
> best_params <- select_best(tuned, metric = "roc_auc")
> 
> final_mod <- finalize_model(mod, best_params)
> 
> final_recipe <- finalize_recipe(rec, best_params)
> 
> final_fit <- last_fit(final_mod, final_recipe, d)
> saveRDS(final_fit, "models/final_fit.Rds")
> 
> 
> proc.time()
   user  system elapsed 
 15.321   1.520  55.989 
